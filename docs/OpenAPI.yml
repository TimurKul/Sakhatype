openapi: 3.0.2
info:
  title: Sakhatype
  version: '1.0'
servers:
  - url: https://sakhatype/v1
security:
  - bearerAuth: []

tags:
  - name: Auth
    description: Авторизация и получение токенов доступа
  - name: Users
    description: Регистрация и управление пользователями
  - name: Words
    description: Получение слов
  - name: Results
    description: Добавление и просмотр результатов
  - name: Periods
    description: Управление временными периодами статистики
  - name: Leaderboard
    description: Таблица лидеров

paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: Вход пользователя
      description: Возвращает JWT-токен для доступа к защищённым эндпоинтам.
      requestBody:
        required: true
        content:
          application/json:
            examples:
              loginExample:
                summary: Пример логина
                value:
                  username: "name"
                  password: "Qwerty.123"
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Успешный вход
          content:
            application/json:
              examples:
                success:
                  summary: Успешный ответ
                  value:
                    access_token: "eyJhbGciOiJIUzI1NiIsInR5..."
                    token_type: "Bearer"
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                    example: Bearer
        '401':
          description: Неверные учётные данные

  /users:
    get:
      tags:
        - Users
      summary: Получить список пользователей
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Список пользователей
          content:
            application/json:
              examples:
                example:
                  summary: Пример списка пользователя
                  value:
                    - username: "name_1"
                      register_date: "2025-01-01"
                    - username: "name_2"
                      register_date: "2025-02-02"
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - Users
      summary: Создать нового пользователя
      requestBody:
        required: true
        content:
          application/json:
            examples:
              example:
                summary: Пример регистрации
                value:
                  username: "new_user"
                  password: "Qwerty.123"
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Пользователь создан
          content:
            application/json:
              examples:
                success:
                  value:
                    message: "User created successfully"
                    register_date: "2025-03-03"
              schema:
                $ref: '#/components/schemas/UserCreated'

  /words:
    get:
      tags:
        - Words
      summary: Получить список слов
      responses:
        '200':
          description: Список слов
          content:
            application/json:
              examples:
                example:
                  summary: Пример списка слов
                  value:
                    - word_id: 1
                      word: "саха"
                    - word_id: 2
                      word: "тыл"
                    - word_id: 3
                      word: "баар"
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Word'

  /results:
    post:
      tags:
        - Results
      summary: Добавить результат пользователя
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            examples:
              example:
                summary: Пример результата
                value:
                  username: "name"
                  wpm: 88.4
                  accuracy: 0.89
            schema:
              type: object
              properties:
                username:
                  type: string
                wpm:
                  type: number
                accuracy:
                  type: number
      responses:
        '201':
          description: Результат сохранён
          content:
            application/json:
              examples:
                success:
                  value:
                    message: "Result saved"
                    result_id: 42
              schema:
                $ref: '#/components/schemas/ResultCreated'

  /results/{username}:
    get:
      tags:
        - Results
      summary: Получить результаты конкретного пользователя
      security:
        - bearerAuth: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
          example: "name_1"
      responses:
        '200':
          description: Список результатов
          content:
            application/json:
              examples:
                example:
                  value:
                    - date: "2025-10-14"
                      wpm: 85.3
                      accuracy: 0.94
                    - date: "2025-10-13"
                      wpm: 80.7
                      accuracy: 0.91
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result'

  /periods:
    get:
      tags:
        - Periods
      summary: Получить список периодов
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Периоды
          content:
            application/json:
              examples:
                example:
                  value:
                    - period_id: 1
                      period_description: "За всё время"
                    - period_id: 2
                      period_description: "За день"
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Period'

  /leaderboard/{period_id}:
    get:
      tags:
        - Leaderboard
      summary: Получить таблицу лидеров за период
      security:
        - bearerAuth: []
      parameters:
        - name: period_id
          in: path
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: Таблица лидеров
          content:
            application/json:
              examples:
                example:
                  value:
                    - spot: 1
                      username: "name_1"
                      date: "2025-10-08"
                    - spot: 2
                      username: "name_2"
                      date: "2025-10-08"
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeaderboardEntry'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        username:
          type: string
        register_date:
          type: string
          format: date

    UserCreated:
      type: object
      properties:
        message:
          type: string
        register_date:
          type: string
          format: date

    Word:
      type: object
      properties:
        word_id:
          type: integer
        word:
          type: string

    Result:
      type: object
      properties:
        date:
          type: string
          format: date
        wpm:
          type: number
        accuracy:
          type: number

    ResultCreated:
      type: object
      properties:
        message:
          type: string
        result_id:
          type: integer

    Period:
      type: object
      properties:
        period_id:
          type: integer
        period_description:
          type: string

    LeaderboardEntry:
      type: object
      properties:
        spot:
          type: integer
        username:
          type: string
        date:
          type: string
          format: date